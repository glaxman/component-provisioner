# affinity -- Affinity for pod assignment
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: cluster-autoscaler
          namespaces:
            - kube-system
          topologyKey: kubernetes.io/hostname
        weight: 100
autoDiscovery:
  clusterName: k3d-velad-cluster-default
awsRegion: us-west-2
cloudConfigPath: ""
dnsPolicy: Default

deployment:
  # deployment.annotations -- Annotations to add to the Deployment object.
  annotations: { }

extraArgs:
  cloud-provider: aws
  leader-elect: true
  leader-elect-lease-duration: 30s
  leader-elect-renew-deadline: 15s
  leader-elect-retry-period: 10s
  skip-nodes-with-local-storage: false
  balance-similar-node-groups: true
  balancing-label: atmos_node_group
  expander: least-waste

extraVolumes: []

extraVolumeMounts: []

fullnameOverride: "cluster-autoscaler"
nameOverride: "cluster-autoscaler"

# replicaCount -- Desired number of pods
replicaCount: 1

# resources -- Pod resource requests and limits.
#resources:
#  limits:
#    cpu: ${AUTOSCALER_CPU_LIMIT}
#    memory: ${AUTOSCALER_MEM_LIMIT}
#  requests:
#    cpu: ${AUTOSCALER_CPU_REQUEST}
#    memory: ${AUTOSCALER_MEM_REQUEST}

# securityContext -- [Security context for pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001

# topologySpreadConstraints -- You can use topology spread constraints to control how Pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains. (requires Kubernetes >= 1.19).
topologySpreadConstraints:
  - labelSelector:
    matchLabels:
      app.kubernetes.io/name: cluster-autoscaler
    maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway

# updateStrategy -- [Deployment update strategy](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
updateStrategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  type: RollingUpdate

image:
  tag: v1.25.0

